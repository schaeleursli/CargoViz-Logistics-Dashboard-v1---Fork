# Patch to fix token persistence, env‑var naming, and login defaults
# Apply with: git apply cargoviz-auth-and-env-fix.patch

--- a/src/context/AuthContext.tsx
+++ b/src/context/AuthContext.tsx
@@
 import React, { createContext, useContext, useState, useEffect } from 'react';
 import cargoVizAPI from '../api/cargoVizAPI';
 
 export const AuthContext = createContext(/* ... */);
+
+const TOKEN_KEY = 'cargoviz_token';
+const USER_KEY  = 'cargoviz_user';
 
 export const AuthProvider: React.FC = ({ children }) => {
   const [user, setUser] = useState<User | null>(null);
   const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);
+
+  /* Bootstrap auth state from localStorage once on mount */
+  useEffect(() => {
+    const storedToken = localStorage.getItem(TOKEN_KEY);
+    const storedUser  = localStorage.getItem(USER_KEY);
+    if (storedToken && storedUser) {
+      setUser(JSON.parse(storedUser));
+      setIsAuthenticated(true);
+    }
+  }, []);
@@
   const login = async (email: string, password: string) => {
     const { token, user: userData } = await cargoVizAPI.login(email, password);
-    setUser(userData);
-    setIsAuthenticated(true);
+    /* Persist credentials so axios interceptor can send the bearer */
+    localStorage.setItem(TOKEN_KEY, token);
+    localStorage.setItem(USER_KEY, JSON.stringify(userData));
+
+    setUser(userData);
+    setIsAuthenticated(true);
   };
@@
   const logout = () => {
+    localStorage.removeItem(TOKEN_KEY);
+    localStorage.removeItem(USER_KEY);
     setUser(null);
     setIsAuthenticated(false);
   };
 }
--- a/src/api/apiClient.ts
+++ b/src/api/apiClient.ts
@@
-import axios from 'axios';
-const apiUrl = window._env_.REACT_APP_CARGOVIZ_API_URL ?? 'https://api.cargoviz.com/api';
+import axios from 'axios';
+
+/* Vite exposes env vars that start with VITE_ */
+const apiUrl = import.meta.env.VITE_CARGOVIZ_API_URL ?? 'https://api.cargoviz.com/api';
@@
-  const token = localStorage.getItem('token');
+  const token = localStorage.getItem('cargoviz_token');
   if (token) {
@@
 export default apiClient;
--- a/src/pages/Login.tsx
+++ b/src/pages/Login.tsx
@@
-  const [password, setPassword] = useState('3b49300d86dff8b33f6a1d3e440fdaed6e688c58e7a79c2aa72b3c3e9d35d422');
+  /* Default empty string; API will hash server‑side */
+  const [password, setPassword] = useState('');
--- a/src/lib/socket.ts
+++ b/src/lib/socket.ts
@@
-const wsUrl = window._env_.REACT_APP_CARGOVIZ_WS_URL ?? 'ws://localhost:8080/ws';
+const wsUrl = import.meta.env.VITE_CARGOVIZ_WS_URL ?? 'ws://localhost:8080/ws';
--- /dev/null
+++ b/.env.example
@@
+# Copy to .env.local and adjust to your environment
+VITE_CARGOVIZ_API_URL=http://localhost:4000/api
+VITE_CARGOVIZ_WS_URL=ws://localhost:4000/ws
+
+# Feel free to add further variables prefixed with VITE_
